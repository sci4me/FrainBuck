#!/usr/bin/env lua

local args = { ... }

if #args ~= 1 then
	print("Usage: topt <file>")
	return
end

local fh = io.open(args[1], "r")

if not fh then
	print("Could not open file '" .. args[1] .. "'")
	return
end

local text = fh:read("*a")
fh:close()

local parts = {}

local current = ""
for i = 1, #text do
	local c = text:sub(i, i)
	if c == '+' or c == '-' or c == '>' or c == '<' then
		current = current .. c
	else
		if #current > 0 then
			table.insert(parts, {
				code = current,
				check = true
			})
			current = ""
		end

		table.insert(parts, {
			code = c,
			check = false
		})
	end
end

if #current > 0 then
	local check = true
	
	for i = 1, #current do
		local c = current:sub(i, i)
		if c == '[' or c == ']' or c == ',' or c == '.' then
			check = false
		end
	end

	table.insert(parts, {
		code = current,
		check = check
	})
end

for i = 1, #parts do
	local part = parts[i]
	if part.check then
		local code = part.code

		local cells = {}
		local nmoves = 0
		local minPointer = 0
		local maxPointer = 0
		local pointer = 0

		for j = 1, #code do
			local c = code:sub(j, j)
			if c == '+' then
				if not cells[pointer] then
					cells[pointer] = 1
				else
					cells[pointer] = cells[pointer] + 1
				end
			elseif c == '-' then
				if not cells[pointer] then
					cells[pointer] = -1
				else
					cells[pointer] = cells[pointer] - 1
				end
			elseif c == '>' then
				pointer = pointer + 1
				nmoves = nmoves + 1

				if pointer > maxPointer then
					maxPointer = pointer
				end
			elseif c == '<' then
				pointer = pointer - 1
				nmoves = nmoves + 1

				if pointer < minPointer then
					minPointer = pointer
				end
			end
		end

		local ncells = 0
		for i = minPointer, maxPointer do
			if cells[i] ~= nil and cells[i] ~= 0 then
				ncells = ncells + 1
			end
		end

		print(code)
		print("    cells: " .. ncells)
		print("    moves: " .. nmoves)
		print("    ptr range: " .. minPointer .. " to " .. maxPointer)
		print("    ptr end: " .. pointer)
		print()
	end
end